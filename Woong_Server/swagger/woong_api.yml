swagger: "2.0"
info:
  title: 웅감
  version: "1.0"
  description: "project woong's server API"

host: localhost:3000
basePath: /api/v1.0
schemes:
  - http
  - https
paths:
# 카테고리별 식품 리스트
  category/main/{category_id}:
    get:
      summary: select Item associate category
      description: 카테고리별로 식품 리스트를 가져옵니다.
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - category
      parameters:
        - in: path
          name: category_id
          type: integer
          required: true
          description: select item for food_type
      responses:
        200:
          description: status code 200
          schema:
              type: object
              properties:
                message:
                  type: string
                  example: success
                data:
                  type: object
                    schema:
                      $ref: '#/definitions/sub_list'
        403:
          description: status code 403
          schema:
            $ref: '#/definitions/403_error'
        404:
          description: status code 404
          schema:
            $ref: '#/definitions/404_error'
        500:
          description: status code 500
          schema:
            $ref: '#/definitions/500_error'
# 해당상품의 판매마켓리스트 가져오기
  category/main/{main_id}/sub/{sub_id}:
    get:
      summary: 마켓별 상품 리스트
      description: 상품 리스트
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - category
      parameters:
        - in: path
          name: main_id
          type: integer
          required: true
          description: 마켓을 구분하는 마켓 고유의 인덱스
        - in: path
          name: sub_id
          type: integer
          required: true
          description: 마켓을 구분하는 마켓 고유의 인덱스
        - in : query
          name : options
          type : string
          required : true
          description: 상품검색에 대한 판매 마켓 리스트
      responses:
        200:
          description: status code 200
          schema:
              type: object
              properties:
                message:
                  type: string
                  example: success
                data:
                  type: object
                  scheme:
                    $ref: '#/definitions/item_info'
        403:
          description: status code 403
          schema:
            $ref: '#/definitions/403_error'
        404:
          description: status code 404
          schema:
            $ref: '#/definitions/404_error'
        500:
          description: status code 500
          schema:
            $ref: '#/definitions/500_error'
# 상품 검색 
  /food/search:
    get:
      summary: 상품 검색하기
      description: 판매자들이 등록한 상품 검색
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - food
      parameters:
        - in : query
          name : options
          type : string
          required : true
          description: 상품검색에 대한 검색어 입력
      responses:
        200:
          description: status code 200
          schema:
            type: object
            properties:
              message:
                type: string
                example: success
                description: 성공 메시지
              data:
                type: object
                properties:
                  sheme:
                    $ref: '#/definitions/item_info'
        403:
          description: status code 403
          schema:
            $ref: '#/definitions/403_error'
        404:
          description: status code 404
          schema:
            $ref: '#/definitions/404_error'
        500:
          description: status code 500
          schema:
            $ref: '#/definitions/500_error'
# 상품 찜하기 등록
  /favorite/{item_id}:
    post:
      summary: 상품 찜하기
      description: 사용자가 관심있는 상품 찜하기
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - favorite
      parameters:
        - in: path
          name: item_id
          type: integer
          required: true
          description: 상품의 아이디
        - in: header
          name: user_token
          type: string
          required: true
          description: 유저의 토큰
      responses:
        200:
          description: status code 200
          schema:
              type: object
              properties:
                message:
                  type: string
                  example: success
                  description: 성공 메시지
        403:
          description: status code 403
          schema:
            $ref: '#/definitions/403_error'
        404:
          description: status code 404
          schema:
            $ref: '#/definitions/404_error'
        500:
          description: status code 500
          schema:
            $ref: '#/definitions/500_error'              
# 상품 찜하기 해제
    delete:
      summary: 찜한 상품 해제
      description: 사용자가 등록한 찜한 상품 해제
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - favorite
      parameters:
        - in: path
          name: item_id
          type: integer
          required: true
          description: 상품의 아이디
        - in: header
          name: user_token
          type: string
          required: true
          description: 유저의 토큰
      responses:
        200:
          description: status code 200
          schema:
              type: object
              properties:
                message:
                  type: string
                  example: success
                  description: 성공 메시지
        403:
          description: status code 403
          schema:
            $ref: '#/definitions/403_error'
        404:
          description: status code 404
          schema:
            $ref: '#/definitions/404_error'
        500:
          description: status code 500
          schema:
            $ref: '#/definitions/500_error' 
# 찜하기 리스트
  /favorite:
    get:
      summary: 찜하기 리스트
      description: 내가 찜한 상품의 리스트
      consumes:
        - application/x-www-form-urlencoded
      tags:
        - favorite
      parameters:
        - in: header
          name: user_token
          type: string
          required: true
          description: 유저의 토큰
      responses:
        200:
          description: status code 200
          schema:
              type: object
              properties:
                message:
                  type: string
                  example: success
                  description: 성공 메시지
                data:
                  type: object
                  scheme:
                    $ref: '#/definitions/item_info'
        403:
          description: status code 403
          schema:
            $ref: '#/definitions/403_error'
        404:
          description: status code 404
          schema:
            $ref: '#/definitions/404_error'
        500:
          description: status code 500
          schema:
            $ref: '#/definitions/500_error'              

# response 공통 값      
definitions:

# Internal Server Error
  500_error:
    type: object
    properties:
      message:
        type: string
        example: Internal Server Error
    
# Not Found
  404_error:
    type: object
    properties:
      message:
        type: string
        example: Not Found

# Forbidden      
  403_error:
    type: object
    properties:
      message:
        type: string
        example: Forbidden

# SUB_LIST
  sub_list:
    type: object
    properties:
      sub_id:
        type: integer
        example: 1
      sub_name:
        type: string
        example: 바나나
      sub_image:
        type: string
        example: https://s3_bucket
# ITEM_INFOMATION
  item_info:
    type: object
    properties:
      item_id:
        type: integer
        example: 1
      market_id:
        type: integer
        example: 1
      main_category_id:
        type: integer
        example: 1
      sub_category_id:
        type: integer
        example: 1
      market_name:
        type: string
        example: 동수네감자집
      item_name:
        type: string
        example: 왕왕큰감자
      unit:
        type: string
        example: 1kg
      price:
        type: integer
        example: 3000
      quick:
        type: boolean
        example: true
      market_free:
        type: boolean
        example: ture
      favorite_flag:
        type: boolean
        example: true
